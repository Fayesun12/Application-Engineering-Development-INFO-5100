/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Logic.Car;
import Logic.CarInformationList;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tanvi Gurav
 */
public class SearchCarJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchCarJPanel
     */
    private JPanel rightPanel;
    private ArrayList<Car> carList;
    

    public SearchCarJPanel(JPanel rightPanel, ArrayList<Car> carList) {
        initComponents();
        this.rightPanel = rightPanel;
        this.carList = carList;
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblViewCarDetails.getModel();
        dtm.setRowCount(0);
        
        //CarInformationList carin = new CarInformationList();
        for(Car car: carList){
            
           Object[] row = new Object[9];
            row[0] = car;
            row[1] = car.isAvailable();
            row[2] = car.getManufactured_year();
            row[3] = car.getMin_seats();
            row[4] = car.getMax_seats();
            row[5] = car.getSerial_num();
            row[6] = car.getModel_num();
            row[7] = car.getAvailble_city();
            row[8] = car.isMaintenance_certificate();
  
            dtm.addRow(row);
          
         
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCarDetails = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSearchbyBrand = new javax.swing.JButton();
        txtFieldSearchBrand = new javax.swing.JTextField();
        txtFieldSearchModel = new javax.swing.JTextField();
        btnSearchbyModel = new javax.swing.JButton();
        txtFieldSearchYear = new javax.swing.JTextField();
        btnSearchbyYear = new javax.swing.JButton();
        txtFieldSearchCity = new javax.swing.JTextField();
        btnSearchbyCity = new javax.swing.JButton();
        txtFieldSearchSerial = new javax.swing.JTextField();
        btnSearchbySerial = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSearchbyExpired = new javax.swing.JButton();
        btnSearchbyAvailable = new javax.swing.JButton();
        btnSearchbyUnavailable = new javax.swing.JButton();
        btnFirstAvailable = new javax.swing.JButton();
        btnSeats = new javax.swing.JButton();
        txtFieldSearchMax = new javax.swing.JTextField();
        txtFieldSearchMin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnUnique = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaManuList = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(102, 102, 0));

        tblViewCarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Availability", "Manufactured Year", "Minimum Seats", "Maximum Seats", "Serial Number", "Model Number", "Available City", "Maintainence Certificate Validity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewCarDetails);

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("Search Details");

        btnSearchbyBrand.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyBrand.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyBrand.setText("Search by Brand");
        btnSearchbyBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyBrandActionPerformed(evt);
            }
        });

        btnSearchbyModel.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyModel.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyModel.setText("Search by Model");
        btnSearchbyModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyModelActionPerformed(evt);
            }
        });

        btnSearchbyYear.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyYear.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyYear.setText("Search by Year");
        btnSearchbyYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyYearActionPerformed(evt);
            }
        });

        btnSearchbyCity.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyCity.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyCity.setText("Search by City");
        btnSearchbyCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyCityActionPerformed(evt);
            }
        });

        btnSearchbySerial.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbySerial.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbySerial.setText("Search by Serial");
        btnSearchbySerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbySerialActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSearchbyExpired.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyExpired.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyExpired.setText("Search by Expired");
        btnSearchbyExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyExpiredActionPerformed(evt);
            }
        });

        btnSearchbyAvailable.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyAvailable.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyAvailable.setText("Available Cars");
        btnSearchbyAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyAvailableActionPerformed(evt);
            }
        });

        btnSearchbyUnavailable.setBackground(new java.awt.Color(255, 204, 0));
        btnSearchbyUnavailable.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnSearchbyUnavailable.setText("Unavailable Cars");
        btnSearchbyUnavailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyUnavailableActionPerformed(evt);
            }
        });

        btnFirstAvailable.setBackground(new java.awt.Color(255, 204, 0));
        btnFirstAvailable.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnFirstAvailable.setText("First Available Car");
        btnFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableActionPerformed(evt);
            }
        });

        btnSeats.setText("Search Seat Availability");
        btnSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setText("Enter Maximum Seats:");

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 0));
        jLabel3.setText("Enter Minimum Seats:");

        btnUnique.setBackground(new java.awt.Color(255, 204, 0));
        btnUnique.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnUnique.setText("Manufacturer List");
        btnUnique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUniqueActionPerformed(evt);
            }
        });

        txtAreaManuList.setColumns(20);
        txtAreaManuList.setRows(5);
        jScrollPane3.setViewportView(txtAreaManuList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(293, 293, 293)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtFieldSearchBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnSearchbyBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtFieldSearchCity, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                                .addComponent(txtFieldSearchModel)
                                                .addComponent(txtFieldSearchYear))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(btnSearchbyYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnSearchbyModel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnSearchbyCity, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(txtFieldSearchSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnSearchbySerial, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtFieldSearchMax)
                                            .addComponent(txtFieldSearchMin)
                                            .addComponent(btnSeats))))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnSearchbyExpired, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSearchbyAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSearchbyUnavailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnFirstAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUnique, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSearchbyExpired)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchbyAvailable)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchbyUnavailable, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFirstAvailable)
                        .addGap(18, 18, 18)
                        .addComponent(btnUnique)
                        .addGap(132, 132, 132))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchbyBrand)
                            .addComponent(txtFieldSearchBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldSearchModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchbyModel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldSearchYear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchbyYear))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldSearchCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchbyCity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldSearchSerial, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchbySerial))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldSearchMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldSearchMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSeats))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchbyBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyBrandActionPerformed
        
        
       String brand = txtFieldSearchBrand.getText();
       ArrayList<Car> searchByBrand = CarInformationList.searchByBrand(brand, carList);
       //System.out.println(searchByBrand);
        
        if(searchByBrand.isEmpty()){
            JOptionPane.showMessageDialog(null, "Car of given brand you entered does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByBrand);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
       
      /* String brand = txtFieldSearchBrand.getText();
       DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, carList, brand);
        rightPanel.add("DisplayFilterJPanel", filterpanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);*/
      
       
       
       
    }//GEN-LAST:event_btnSearchbyBrandActionPerformed

    private void btnSearchbyModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyModelActionPerformed
        
        String model = txtFieldSearchModel.getText();
       ArrayList<Car> searchByModel = CarInformationList.searchByModel(model, carList);
       //System.out.println(searchByBrand);
        
        if(searchByModel.isEmpty()){
            JOptionPane.showMessageDialog(null, "Car of given model number you entered does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByModel);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
        txtFieldSearchModel.setText("");
    }//GEN-LAST:event_btnSearchbyModelActionPerformed

    private void btnSearchbyYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyYearActionPerformed
        
       int year = Integer.parseInt(txtFieldSearchYear.getText());
       System.out.println(year);
       ArrayList<Car> searchByYear = CarInformationList.searchByYear(year, carList);
       //System.out.println(searchByBrand);
        
        if(searchByYear.isEmpty()){
            JOptionPane.showMessageDialog(null, "Car of given model number you entered does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByYear);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        txtFieldSearchYear.setText("");
    }//GEN-LAST:event_btnSearchbyYearActionPerformed

    private void btnSearchbyCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyCityActionPerformed
        
       String city = txtFieldSearchCity.getText();
       ArrayList<Car> searchByCity = CarInformationList.searchByCity(city, carList);
       System.out.println(searchByCity);
        
        if(searchByCity.isEmpty()){
            JOptionPane.showMessageDialog(null, "Car of given city you entered does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByCity);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
        txtFieldSearchCity.setText("");
    }//GEN-LAST:event_btnSearchbyCityActionPerformed

    private void btnSearchbySerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbySerialActionPerformed
       
       int serial = Integer.parseInt(txtFieldSearchSerial.getText());
       System.out.println(serial);
       ArrayList<Car> searchBySerial = CarInformationList.searchBySerial(serial, carList);
       //System.out.println(searchByBrand);
        
        if(searchBySerial.isEmpty()){
            JOptionPane.showMessageDialog(null, "Car of given serial number you entered does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchBySerial);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
        txtFieldSearchSerial.setText("");
        
    }//GEN-LAST:event_btnSearchbySerialActionPerformed

    private void btnSearchbyExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyExpiredActionPerformed
        
        Boolean expired = false;
        ArrayList<Car> searchByExpired = CarInformationList.searchByExpired(expired, carList);
        
          if(searchByExpired.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Car has expired maintainence certificate", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByExpired);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
        
        
    }//GEN-LAST:event_btnSearchbyExpiredActionPerformed

    private void btnSearchbyAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyAvailableActionPerformed
        
        Boolean available = true;
        ArrayList<Car> searchByAvailable = CarInformationList.searchByAvailable(available, carList);
        
          if(searchByAvailable.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Car is available right now", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByAvailable);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
    }//GEN-LAST:event_btnSearchbyAvailableActionPerformed

    private void btnSearchbyUnavailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyUnavailableActionPerformed
        
        Boolean unavailable = false;
        ArrayList<Car> searchByUnavailable = CarInformationList.searchByUnavailable(unavailable, carList);
        
          if(searchByUnavailable.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Car is available right now", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByUnavailable);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
    }//GEN-LAST:event_btnSearchbyUnavailableActionPerformed

    private void btnFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableActionPerformed
        
     //   ArrayList<Car> searchByFirstAvailable = CarInformationList.searchByUnavailable(carList);
        
        Boolean available = true;
        ArrayList<Car> searchByFirstAvailable = CarInformationList.searchByFirstAvailable(available, carList);
        
          if(searchByFirstAvailable.isEmpty()){
            JOptionPane.showMessageDialog(null, "No Car is available right now", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, searchByFirstAvailable);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
    }//GEN-LAST:event_btnFirstAvailableActionPerformed

    private void btnSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatsActionPerformed
        
        int maxSeats = Integer.parseInt(txtFieldSearchMax.getText());
        int minSeats = Integer.parseInt(txtFieldSearchMin.getText());
        
        ArrayList<Car> seatList = CarInformationList.searchSeats(maxSeats, minSeats, carList);
        
        if(seatList.isEmpty()){
            
            JOptionPane.showMessageDialog(null, "No Car available for given seat requirement!");           
        }
        else{
            
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(rightPanel, seatList);
            
            rightPanel.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
        
    }//GEN-LAST:event_btnSeatsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUniqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUniqueActionPerformed
        
        Set<String> set = new HashSet<String>();
        
        for(Car c: CarInformationList.getArrayUniqueList()){
            
            set.add(c.getBrand());
            
        }
        
        
        StringBuilder sb = new StringBuilder();
          for (String i : set) {
          sb.append(i == null ? "  " : i.toString());
          sb.append("\n");
        }
          
          txtAreaManuList.setText(String.valueOf(sb));

       
        

        
        
        
    }//GEN-LAST:event_btnUniqueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFirstAvailable;
    private javax.swing.JButton btnSearchbyAvailable;
    private javax.swing.JButton btnSearchbyBrand;
    private javax.swing.JButton btnSearchbyCity;
    private javax.swing.JButton btnSearchbyExpired;
    private javax.swing.JButton btnSearchbyModel;
    private javax.swing.JButton btnSearchbySerial;
    private javax.swing.JButton btnSearchbyUnavailable;
    private javax.swing.JButton btnSearchbyYear;
    private javax.swing.JButton btnSeats;
    private javax.swing.JButton btnUnique;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblViewCarDetails;
    private javax.swing.JTextArea txtAreaManuList;
    private javax.swing.JTextField txtFieldSearchBrand;
    private javax.swing.JTextField txtFieldSearchCity;
    private javax.swing.JTextField txtFieldSearchMax;
    private javax.swing.JTextField txtFieldSearchMin;
    private javax.swing.JTextField txtFieldSearchModel;
    private javax.swing.JTextField txtFieldSearchSerial;
    private javax.swing.JTextField txtFieldSearchYear;
    // End of variables declaration//GEN-END:variables
}
