/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners;

import Business.AirlineDirectory;
import Business.Airliner;
import Business.Flight;
import Business.FlightScheduleDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Team Void
 */
public class NewFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewFlightJPanel
     */

     private JPanel rightPanel;
    private FlightScheduleDirectory flightScheduleDirectory;
    private AirlineDirectory airlineDirectory;
    
    public NewFlightJPanel(JPanel rightPanel, FlightScheduleDirectory flightScheduleDirectory,AirlineDirectory airlineDirectory) {
       
        initComponents();
        this.rightPanel = rightPanel;
        this.flightScheduleDirectory = flightScheduleDirectory;
        this.airlineDirectory=airlineDirectory;
        
        initializ();
    }
    
    private void initializ(){
        
        comboAirlinerName.removeAllItems();
        
        for(Airliner a: airlineDirectory.getAirlineList()){
            comboAirlinerName.addItem(a.getAirlinerName());
        }


        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSource = new javax.swing.JTextField();
        txtFlightNumber = new javax.swing.JTextField();
        txtDestination = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtDepartureTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtArrivalTime = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        comboAirlinerName = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 153, 255));
        setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        jLabel1.setText("Create Flight Details ");

        jLabel2.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel2.setText("Flight Number");

        jLabel3.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel3.setText("Date (DD/MM/YYYY)");

        jLabel4.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel4.setText("Source");

        jLabel5.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel5.setText("Destination");

        btnCreate.setBackground(new java.awt.Color(0, 0, 0));
        btnCreate.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(204, 153, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(204, 153, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel7.setText("Departure Time (HH:MM)");

        jLabel8.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel8.setText("Arrival Time (HH:MM)");

        jLabel6.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel6.setText("Airline Name");

        jLabel9.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel9.setText("Price");

        jLabel10.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel10.setText("Duration (Hrs)");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        comboAirlinerName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(86, 86, 86)
                            .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtSource, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDuration, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSource, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        

        CardLayout cardlayout = (CardLayout)rightPanel.getLayout();
        rightPanel.remove(1);
        rightPanel.remove(this);
        
        FlightScheduleJPanel schedpanel = new FlightScheduleJPanel( rightPanel,  flightScheduleDirectory, airlineDirectory);
        rightPanel.add("FlightScheduleJPanel",schedpanel);
        cardlayout.previous(rightPanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed

        
     
     String fNumber= txtFlightNumber.getText();
     
      if( fNumber == null || fNumber.equals("")){
               JOptionPane.showMessageDialog(null, "Flight Number Can't be Empty!");
               return;
           }
        
        try{
            Integer.parseInt(fNumber);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number! Kindly Enter Valid Flight Number");
                }

   
        
     String s=txtSource.getText();
     if(s == null || s.equals("")){
               JOptionPane.showMessageDialog(null, "Source Can't be Empty!");
               return;
           }
     
     
     String depTime=txtDepartureTime.getText();
      if(depTime == null || depTime.equals("")){
               JOptionPane.showMessageDialog(null, "Departure Time Can't be Empty!");
               return;
           }
     
     String dest=txtDestination.getText();
      if(dest == null || dest.equals("")){
               JOptionPane.showMessageDialog(null, "Destination Can't be Empty!");
               return;
           }
     
     
     String arrTime=txtArrivalTime.getText();
      if(arrTime == null || arrTime.equals("")){
               JOptionPane.showMessageDialog(null, "Arrival Time Can't be Empty!");
               return;
           }
      
     
     if(!DatePatternCorrect()){
        
         JOptionPane.showMessageDialog(null, "Date should be in the form DD/MM/YYYY", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
     if(!ArrTimePatternCorrect()){
         
         JOptionPane.showMessageDialog(null, "Enter Valid Arrival Time", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
     if(!DestTimePatternCorrect()){
         
         JOptionPane.showMessageDialog(null, "Enter Valid Departure Time", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
     String du = txtDuration.getText();
     
      if( du == null || du.equals("")){
               JOptionPane.showMessageDialog(null, "Duration Can't be Empty!");
               return;
           }
        
        try{
            Integer.parseInt(du);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number! Kindly Enter Duration");
                }
     
        
     String p = txtPrice.getText();
     if( p == null || p.equals("")){
               JOptionPane.showMessageDialog(null, "Kindly Enter Price!");
               return;
           }
        
        try{
            Double.parseDouble(p);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number! Kindly Enter Valid Price");
                }
     
     String airlineName = (String)this.comboAirlinerName.getSelectedItem();
     int flightNumber= Integer.parseInt(txtFlightNumber.getText()); 
     String source=txtSource.getText();
     String departureTime=txtDepartureTime.getText();
     String destination=txtDestination.getText();
     String arrivalTime=txtArrivalTime.getText();
     int duration=Integer.parseInt(txtDuration.getText());
     double price=Double.parseDouble(txtPrice.getText());
     String date = txtDate.getText();
 
     Flight flight= flightScheduleDirectory.addFlight();
     
     flight.setAirlineName(airlineName);
     flight.setFlightNumber(flightNumber);
     flight.setSource(source);
     flight.setArrivalTime(arrivalTime);
     flight.setDestination(destination);
     flight.setDepartureTime(departureTime);
     flight.setDate(date);
     flight.setDuration(duration);
     flight.setPrice(price);
 

        JOptionPane.showMessageDialog(null, "Details Recorded Successfully!");
        
        
        txtFlightNumber.setText("");
        txtSource.setText("");
        txtArrivalTime.setText("");
        txtDestination.setText("");
        txtDepartureTime.setText("");
        txtDate.setText("");
        txtDuration.setText("");
        txtPrice.setText("");
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private boolean DatePatternCorrect() {
      
       Pattern p = Pattern.compile("^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{4}$");
       Matcher m = p.matcher(txtDate.getText());
       boolean b = m.matches();
       return b;
    }
    
    private boolean ArrTimePatternCorrect() {
      
       Pattern p = Pattern.compile("([01]?[0-9]|2[0-3]):[0-5][0-9]");
       Matcher m = p.matcher(txtArrivalTime.getText());
       boolean b = m.matches();
       return b;
    }
    
    private boolean DestTimePatternCorrect() {
       
       Pattern p = Pattern.compile("([01]?[0-9]|2[0-3]):[0-5][0-9]");
       Matcher m = p.matcher(txtDepartureTime.getText());
       boolean b = m.matches();
       return b;
    }
    
    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<String> comboAirlinerName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtArrivalTime;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDepartureTime;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSource;
    // End of variables declaration//GEN-END:variables

    

    

    
}
