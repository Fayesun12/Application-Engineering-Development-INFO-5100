/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners;

import Business.AirlineDirectory;
import Business.Flight;
import Business.FlightScheduleDirectory;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Team Void
 */
public class ViewFlightsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewFlightsJPanel
     */

    private FlightScheduleDirectory flightScheduleDirectory;
    private JPanel rightPanel;
    private AirlineDirectory airlineDirectory;
    private Flight flight;

    public ViewFlightsJPanel(JPanel rightPanel,Flight flight, FlightScheduleDirectory flightScheduleDirectory,AirlineDirectory airlineDirectory) {
        
         initComponents();
         this.flight= flight;
         this.rightPanel =  rightPanel;
         this.flightScheduleDirectory = flightScheduleDirectory; 
         this.airlineDirectory=airlineDirectory;
         populate();
         btnSave.setEnabled(false);
         btnUpdate.setEnabled(true);
         
         
        txtAirlinerName.setEditable(false);
        txtFlightNumber.setEditable(false);
        txtSource.setEditable(false);
        txtArrivalTime.setEditable(false);
        txtDestination.setEditable(false);
        txtDepartureTime.setEditable(false);
        txtDate.setEditable(false);
        txtDuration.setEditable(false);
        txtPrice.setEditable(false);
                
         
    }


    private void populate()
    {

        txtAirlinerName.setText(flight.getAirlineName());
        txtFlightNumber.setText(String.valueOf(flight.getFlightNumber()));
        txtSource.setText(flight.getSource());
        txtArrivalTime.setText(flight.getArrivalTime());
        txtDestination.setText(flight.getDestination());
        txtDepartureTime.setText(flight.getDepartureTime());
        txtDate.setText(flight.getDate());
        txtDuration.setText(String.valueOf(flight.getDuration()));
        txtPrice.setText(String.valueOf(flight.getPrice()));

    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtDepartureTime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtArrivalTime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtSource = new javax.swing.JTextField();
        txtAirlinerName = new javax.swing.JTextField();
        txtFlightNumber = new javax.swing.JTextField();
        txtDestination = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 153, 255));

        jLabel1.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        jLabel1.setText("View Flight Details ");

        btnSave.setBackground(new java.awt.Color(0, 0, 0));
        btnSave.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(204, 153, 255));
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(204, 153, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(204, 153, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel2.setText("Flight Number");

        jLabel7.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel7.setText("Departure Time (HH:MM)");

        jLabel3.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel3.setText("Date (DD/MM/YYY)");

        jLabel4.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel4.setText("Source");

        jLabel8.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel8.setText("Arrival Time (HH:MM)");

        jLabel5.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel5.setText("Destination");

        jLabel6.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel6.setText("Airline Name");

        jLabel10.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel10.setText("Duration (Hrs)");

        txtAirlinerName.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jLabel9.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSource, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDuration, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtArrivalTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSource, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
      /*  rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);*/

        CardLayout cardlayout = (CardLayout)rightPanel.getLayout();
        rightPanel.remove(1);
        rightPanel.remove(this);
    
        FlightScheduleJPanel manage = new FlightScheduleJPanel(rightPanel, flightScheduleDirectory, airlineDirectory);
        rightPanel.add("FlightScheduleJPanel",manage);
        cardlayout.previous(rightPanel);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        
         String fNumber= txtFlightNumber.getText();
        
     
      if( fNumber == null || fNumber.equals("")){
               JOptionPane.showMessageDialog(null, "Flight Number Can't be Empty!");
               return;
           }
        
        try{
            Integer.parseInt(fNumber);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number! Kindly Enter Valid Number");
                }

     String s=txtSource.getText();
     if(s == null || s.equals("")){
               JOptionPane.showMessageDialog(null, "Source Can't be Empty!");
               return;
           }
     
     
     String depTime=txtDepartureTime.getText();
      if(depTime == null || depTime.equals("")){
               JOptionPane.showMessageDialog(null, "Departure Time Can't be Empty!");
               return;
           }
     
     String dest=txtDestination.getText();
      if(dest == null || dest.equals("")){
               JOptionPane.showMessageDialog(null, "Destination Can't be Empty!");
               return;
           }
     
     
     String arrTime=txtArrivalTime.getText();
      if(arrTime == null || arrTime.equals("")){
               JOptionPane.showMessageDialog(null, "Arrival Time Can't be Empty!");
               return;
           }
      
     
     if(!DatePatternCorrect()){
        
         JOptionPane.showMessageDialog(null, "Date should be in the form DD/MM/YYYY", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
     if(!ArrTimePatternCorrect()){
         
         JOptionPane.showMessageDialog(null, "Enter Valid Arrival Time", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
     if(!DestTimePatternCorrect()){
         
         JOptionPane.showMessageDialog(null, "Enter Valid Destination Time", "Warning",JOptionPane.WARNING_MESSAGE);   
         return;
     }
     
      String du= txtDuration.getText();
        
     
      if( du == null || du.equals("")){
               JOptionPane.showMessageDialog(null, "Flight duration Can't be Empty!");
               return;
           }
        
        try{
            Integer.parseInt(du);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Enter Valid Duration");
                }


     
     String p = txtPrice.getText();
     if( p == null || p.equals("")){
               JOptionPane.showMessageDialog(null, "Kindly Enter Price!");
               return;
           }
        
        try{
            Double.parseDouble(p);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number! Kindly Enter Valid Price");
                }
       /* 
      String fNumber= txtFlightNumber.getText();
     
      if( fNumber == null || fNumber.equals("")){
               JOptionPane.showMessageDialog(null, "FlightNumber Can't be Empty!");
               return;
           }
        
        try{
            Integer.parseInt(fNumber);   
        }
        catch (NumberFormatException e)
                {
                 JOptionPane.showMessageDialog(null, "Invalid Number format , kindly enter in number format");
                }

     String s=txtSource.getText();
     if(s == null || s.equals("")){
               JOptionPane.showMessageDialog(null, "Source Can't be Empty!");
               return;
           }
     
     String depTime=txtDepartureTime.getText();
      if(depTime == null || depTime.equals("")){
               JOptionPane.showMessageDialog(null, "Departure Time Can't be Empty!");
               return;
           }
     
     String dest=txtDestination.getText();
      if(dest == null || dest.equals("")){
               JOptionPane.showMessageDialog(null, "Destination Can't be Empty!");
               return;
           }
     
     
     String arrTime=txtArrivalTime.getText();
      if(arrTime == null || arrTime.equals("")){
               JOptionPane.showMessageDialog(null, "Arrival Time Can't be Empty!");
               return;
           }*/
      
      flight.setAirlineName(txtAirlinerName.getText());
      flight.setArrivalTime(txtArrivalTime.getText());
      flight.setDate(txtDate.getText());
      flight.setDepartureTime(txtDepartureTime.getText());
      flight.setDestination(txtDestination.getText());
      flight.setDuration(Integer.valueOf(txtDuration.getText()));
      flight.setFlightNumber(Integer.valueOf(txtFlightNumber.getText()));
      flight.setSource(txtSource.getText());
      flight.setPrice(Double.valueOf(txtPrice.getText()));
      btnSave.setEnabled(false);
      btnUpdate.setEnabled(true);
      
       
        
        txtAirlinerName.setEditable(false);
        txtFlightNumber.setEditable(false);
        txtSource.setEditable(false);
        txtArrivalTime.setEditable(false);
        txtDestination.setEditable(false);
        txtDepartureTime.setEditable(false);
        txtDate.setEditable(false);
        txtDuration.setEditable(false);
        txtPrice.setEditable(false);
        
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private boolean DatePatternCorrect() {
      
       Pattern p = Pattern.compile("^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{4}$");
       Matcher m = p.matcher(txtDate.getText());
       boolean b = m.matches();
       return b;
    }
    
    private boolean ArrTimePatternCorrect() {
      
       Pattern p = Pattern.compile("([01]?[0-9]|2[0-3]):[0-5][0-9]");
       Matcher m = p.matcher(txtArrivalTime.getText());
       boolean b = m.matches();
       return b;
    }
    
    private boolean DestTimePatternCorrect() {
       
       Pattern p = Pattern.compile("([01]?[0-9]|2[0-3]):[0-5][0-9]");
       Matcher m = p.matcher(txtDepartureTime.getText());
       boolean b = m.matches();
       return b;
    }
    
    
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        
      //  txtAirlinerName.setEditable(true);
        txtArrivalTime.setEditable(true);
        txtDate.setEditable(true);
        txtDepartureTime.setEditable(true);
        txtDestination.setEditable(true);
        txtDuration.setEditable(true);
        txtFlightNumber.setEditable(true);
        txtSource.setEditable(true);
        txtPrice.setEditable(true);
        btnSave.setEnabled(true);
       
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAirlinerName;
    private javax.swing.JTextField txtArrivalTime;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDepartureTime;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSource;
    // End of variables declaration//GEN-END:variables
}
